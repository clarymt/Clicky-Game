{"version":3,"sources":["components/Card/Card.js","components/Wrapper/Wrapper.js","components/Header/Header.js","App.js","index.js"],"names":["Card","props","className","onClick","clickCount","id","class","alt","name","src","image","Wrapper","children","Header","href","score","highscore","App","state","cards","gameOver","setState","console","log","this","forEach","card","count","alert","find","o","i","sort","Math","random","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"4t4BAYeA,G,MATF,SAAAC,GAAK,OAEd,yBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,WAAWH,EAAMI,MACxD,yBAAKH,UAAU,iBACX,yBAAKI,MAAM,WAAWC,IAAKN,EAAMO,KAAMC,IAAKR,EAAMS,YCF/CC,G,MAFC,SAAAV,GAAK,OAAI,yBAAKC,UAAU,WAAWD,EAAMW,YCa1CC,G,MAZA,SAAAZ,GAAK,OAGhB,yBAAKK,MAAM,gEACP,uBAAGJ,UAAU,QAAQI,MAAM,eAAeQ,KAAK,KAAKb,EAAMW,UAC1D,uBAAGV,UAAU,SAASI,MAAM,eAAeQ,KAAK,KAAhD,UAA4Db,EAAMc,MAAlE,eAAqFd,EAAMe,c,OCsDpFC,G,iNAtDbC,MAAQ,CACNC,QACAJ,MAAO,EACPC,UAAW,G,EAGbI,SAAW,WAWT,OAVI,EAAKF,MAAMH,MAAQ,EAAKG,MAAMF,WAChC,EAAKK,SAAS,CAAEL,UAAW,EAAKE,MAAMH,QAAS,WAC7CO,QAAQC,IAAIC,KAAKN,MAAMF,cAG3B,EAAKE,MAAMC,MAAMM,SAAQ,SAAAC,GACvBA,EAAKC,MAAQ,KAEfC,MAAM,uBAAD,OAAwB,EAAKV,MAAMH,QACxC,EAAKM,SAAS,CAAEN,MAAO,KAChB,G,EAGTX,WAAa,SAAAC,GACX,EAAKa,MAAMC,MAAMU,MAAK,SAACC,EAAGC,GACxB,GAAID,EAAEzB,KAAOA,EAAI,CACf,GAAuB,IAAnBc,EAAMY,GAAGJ,MAMX,OALAR,EAAMY,GAAGJ,MAAQR,EAAMY,GAAGJ,MAAQ,EAClC,EAAKN,SAAS,CAAEN,MAAO,EAAKG,MAAMH,MAAQ,IAAK,WAC7CO,QAAQC,IAAIC,KAAKN,MAAMH,UAEzB,EAAKG,MAAMC,MAAMa,MAAK,kBAAMC,KAAKC,SAAW,OACrC,EAEP,EAAKd,gB,wEAMH,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAQL,MAAOS,KAAKN,MAAMH,MAAOC,UAAWQ,KAAKN,MAAMF,WAAvD,+CACCQ,KAAKN,MAAMC,MAAMgB,KAAI,SAAAT,GAAI,OACxB,kBAAC,EAAD,CACEtB,WAAY,EAAKA,WACjBC,GAAIqB,EAAKrB,GACT+B,IAAKV,EAAKrB,GACVK,MAAOgB,EAAKhB,gB,GAhDN2B,c,MCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3f5527a5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = props => (\r\n\r\n    <div className=\"card\" onClick={() => props.clickCount(props.id)}>\r\n        <div className=\"img-container\">\r\n            <img class=\"card-img\" alt={props.name} src={props.image} />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Card;","import React from \"react\";\r\nimport \"./Wrapper.css\";\r\n\r\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\r\n\r\nexport default Wrapper;","\r\nimport React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = props => (\r\n\r\n\r\n    <nav class=\"col-xl fixed-top navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <a className=\"title\" class=\"navbar-brand\" href=\"#\">{props.children}</a>\r\n        <a className=\"scores\" class=\"navbar-brand\" href=\"#\">Score: {props.score} Highscore: {props.highscore}</a>\r\n    </nav>\r\n\r\n\r\n);\r\n\r\n\r\nexport default Header;","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport cards from \"./cards.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // Setting this.state.cards to the cards json array\n  state = {\n    cards,\n    score: 0,\n    highscore: 0\n  };\n\n  gameOver = () => {\n    if (this.state.score > this.state.highscore) {\n      this.setState({ highscore: this.state.score }, function () {\n        console.log(this.state.highscore);\n      });\n    }\n    this.state.cards.forEach(card => {\n      card.count = 0;\n    });\n    alert(`Game Over! \\nscore: ${this.state.score}`);\n    this.setState({ score: 0 });\n    return true;\n  }\n\n  clickCount = id => {\n    this.state.cards.find((o, i) => {\n      if (o.id === id) {\n        if (cards[i].count === 0) {\n          cards[i].count = cards[i].count + 1;\n          this.setState({ score: this.state.score + 1 }, function () {\n            console.log(this.state.score);\n          });\n          this.state.cards.sort(() => Math.random() - 0.5)\n          return true;\n        } else {\n          this.gameOver();\n        }\n      }\n    });\n  }\n  // Map over this.state.cards and render a cardCard component for each card object\n  render() {\n    return (\n      <Wrapper>\n        <Header score={this.state.score} highscore={this.state.highscore}>Hiking Clicky Game: Don't Forget Your Gear!</Header>\n        {this.state.cards.map(card => (\n          <Card\n            clickCount={this.clickCount}\n            id={card.id}\n            key={card.id}\n            image={card.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}